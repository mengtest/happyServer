local skynet = require "skynet"

local _MASK_VALUE = 0x0f
local _MASK_COLOR = 0xf0

-- 13*4 * 8 8副牌
local _cards = {
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,	--黑桃 A - K
	0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,	--方块 A - K
	0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,	--梅花 A - K
	0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,	--红桃 A - K
	0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D	--黑桃 A - K
}

local cardNum = 0 -- 剩余牌数
local totalNum = 0 -- 局数

local cardUsed = 0 -- 该轮消耗的牌数
local zbNo = 1 -- 作弊起始牌

local function shuffleCard()
	math.randomseed(skynet.self()*100 + skynet.now())
	local n = #_cards
	for i=1, n-1 do
		local j = math.random(i, n)
		local temp = _cards[i]
		_cards[i] = _cards[j]
		_cards[j] = temp
	end
	cardNum = #_cards
	totalNum = 0
end

local function getCardNum()
	return cardNum
end

local function getTotalNum()
	return totalNum
end


local function _calNum(num)
	return (num%0x10 >= 10 and 0) or num%0x10
end

local function zbBegin(nowNo) -- 正常取牌发现亏损过大时，进行作弊取牌
	local k = nowNo
	local banker = {}
	local player = {}
	local result = {0,0,0,0,0}
	player[1] = _cards[k]
	k = k - 1
	banker[1] = _cards[k]
	k = k - 1
	player[2] = _cards[k]
	k = k - 1
	banker[2] = _cards[k]
	k = k - 1
	local pNum = (_calNum(player[1]) + _calNum(player[2]))%10
	local bNum = (_calNum(banker[1]) + _calNum(banker[2]))%10
	
	if pNum >= 8 or bNum >= 8 then
	
	elseif pNum >= 6 then
		if bNum <= 5 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		end
	elseif pNum <= 5 then
		player[3] = _cards[k]
		k = k - 1
		pNum = (pNum + _calNum(player[3]))%10
		if bNum <= 2 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		elseif bNum == 3 and _calNum(player[3]) ~= 8 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		elseif bNum == 4 and _calNum(player[3]) >= 2  and _calNum(player[3]) <= 7 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		elseif bNum == 5 and _calNum(player[3]) >= 4  and _calNum(player[3]) <= 7 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		elseif bNum == 6 and _calNum(player[3]) >= 6  and _calNum(player[3]) <= 7 then
			banker[3] = _cards[k]
			k = k - 1
			bNum = (bNum + _calNum(banker[3]))%10
		end
	end
	
	if pNum > bNum then		-- 闲赢
		result[1] = 1
	elseif pNum < bNum then -- 庄赢
		result[3] = 1
	else 					-- 平
		result[2] = 1
	end
	
	
	if player[1] % 0x10 == player[2] % 0x10 then -- 闲对
		result[4] = 1
	end
	if banker[1] % 0x10 == banker[2] % 0x10 then -- 庄对
		result[5] = 1
	end
	
	cardUsed = nowNo - k
	
	return banker, player, result
end

-- 返回庄家，闲家牌，结果(闲，平，庄，闲对，庄对)
-- 调用前确保cardNum >= 6
local function getCardsFromStack(isZb) -- 发4-6张牌
	if isZb then -- 作弊
		zbNo = zbNo - 1
		if zbNo < 6 then
			return nil,nil,nil
		end
		return zbBegin(zbNo)
	else -- 不作弊
		zbNo = 60
		if cardNum < 60 then
			return nil,nil,nil
		end
		return zbBegin(cardNum)
	end
end

local function cardEnd() -- 取牌结束
	if cardUsed == 0 then
		return
	end
	if zbNo ~= 60 then -- 作弊
		local temp = 0
		for i=1,cardUsed do
			temp = _cards[cardNum-i+1]
			_cards[cardNum-i+1] = _cards[zbNo-i+1]
			_cards[zbNo-i+1] = temp
		end
	end
	totalNum = totalNum + 1
	cardNum = cardNum - cardUsed
	cardUsed = 0
	zbNo = 60
end




return {
	shuffleCard = shuffleCard,
	getCardNum = getCardNum,
	getTotalNum = getTotalNum,
	getCardsFromStack = getCardsFromStack,
	cardEnd = cardEnd,
}
